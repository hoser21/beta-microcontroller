ADDC(R31, 10, R1)   // ADDC(op, op, out) R1 = 10
BEQ()
ADDC(R1, 5, R2)     // R2 = 15
ADD(R1, R2, R3)     // R3 = 25
ST(R3, 128, R31)    // ST(Rc, literal, Ra) Mem[128] = 25
ST(R1, 129, R31)    // Mem[129] = 10
LD(R31, 129, R4)    // R4 = 10

------------------------

110000 00001 11111 00000 00000001010
110000 00010 00001 00000 00000000101
100000 00011 00001 00010 00000000000
011001 00011 11111 00000 00010000000
011001 00001 11111 00000 00010000001
011000 00100 11111 00000 00010000001

------------------
Fibonacci
F(n) = F(n-1) + fF(n-2)

ADDC(R31, 40, R0)    // R0 = n
ADDC(R31, 0, R1)
ADDC(R31, 1, R2)

LOOP:
BEQ(R0, END, R31)   // branch is PC = PC + 1 + literal, so literal = 5
ADDC(R1, 0, R3)
ADD(R1, R2, R1)
ADDC(R3, 0, R2)
SUBC(R0, 1, R0)
ADDC(R31, LOOP, R4) // inst 3
JMP(R4, R31)

END:


------------------------------
0:  110000 00000 11111 00000 00000101000
1:  110000 00001 11111 00000 00000000000
2:  110000 00010 11111 00000 00000000001
3:  011100 11111 00000 00000 00000000101
4:  110000 00011 00001 00000 00000000000
6:  100000 00001 00001 00010 00000000000
7:  110000 00010 00011 00000 00000000000
8:  110001 00000 00000 00000 00000000001
9:  110000 00100 11111 00000 00000000011
10: 011011 11111 00100 00000 00000000000



R3 = R1
R1 = R1 + R2
R2 = R3

0 1 1


0, 1
1, 0
1, 1
2, 1
3, 2
5, 3
8, 5
13, 8
21, 13
34, 21 //10
55, 34
89, 55
144, 89
233, 144
377, 233
610, 377

40: 102334155, 63245986